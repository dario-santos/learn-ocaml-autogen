#!/usr/bin/env bash

DIRS=tests
BDIR=bin
SOLPREFIX=sol_
MAPPREFIX=mapper_
INPUT=input.ml
PTREE=ptree_

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

FAILED=false

gen_meta_json()
{
  MD=$1
  MFILE="meta.json"
  MOUTPUT=$MD$MFILE
  MSOLUTION=$MD$SOLPREFIX$MFILE
  if [ -e $MSOLUTION ]; then
    $BDIR/autogen $D -o meta > /dev/null
    MCOUNT=$(diff -wq $MOUTPUT $MSOLUTION)
    if [ "$?" = "0" ]; then
      echo -e "$MOUTPUT........${GREEN}OK${NC}"
    else
      echo -e "$MOUTPUT........${RED}FAILED${NC}"
      FAILED=true
    fi
  fi
}

echo "Generating files..."
for D in $DIRS/*/; do
  for NAME in prelude prepare solution template test; do
    OUTPUT=$D$NAME.ml
    SOLUTION=$D$SOLPREFIX$NAME.ml
    PTREE_OUTPUT=$D$PTREE$NAME.ml
    PTREE_SOLUTION=$D$PTREE$SOLPREFIX$NAME.ml
    # There can be test directories without every file solution.
    if [ -e $SOLUTION ]; then
      $BDIR/autogen $D -o $NAME > /dev/null
      ocamlfind ppx_tools/dumpast $OUTPUT > $PTREE_OUTPUT
      ocamlfind ppx_tools/dumpast $SOLUTION > $PTREE_SOLUTION
      COUNT=$(diff -y --suppress-common-lines $PTREE_OUTPUT $PTREE_SOLUTION \
        | wc -l)
      # There is one difference between the diffs, the name of the file written
      # by dumpast at the beginning of the file containing the parsetree.
      if [ $COUNT = "1" ]; then
        echo -e "$OUTPUT........${GREEN}OK${NC}"
        rm -f $PTREE_OUTPUT $PTREE_SOLUTION
      else
        echo -e "$OUTPUT........${RED}FAILED${NC}"
        FAILED=true
      fi
    fi
  done
  gen_meta_json $D
done

if [ "$FAILED" = true ]; then
  echo Some tests failed. Their ASTs are avaible to check in their directories.
fi
